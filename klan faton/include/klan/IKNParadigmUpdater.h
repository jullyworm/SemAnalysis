// Copyright (c) 2016 by IIS. All rights reserved.
//===================================================================
// Usage notes:  Интерфейс для внесения изменений в парадигму слова.
//		ancode - строковое предсталвение морф.признаков слова
//		ancode - должен быть записан без ошибок (ошибки игнорируются)
//			
//===================================================================
// Используется :   IKNWord
//===================================================================
// Feb 2016                  Created               L. Sidorova, IIS
//===================================================================
#ifndef IKNParadigmUpdaterH
#define IKNParadigmUpdaterH
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
/** Парадигма - список флексий (окончаний) слова.
 *  К каждой флексии привязывается набор морф.индексов.
 *	Если у формы есть приставки то для пара окончание+приставка - считается отдельной флексией
 */
class IKNParadigmUpdater
{
public:
//    /** Может ли лексема иметь формы с приставками (при этом не обязательно имеет). */
//	virtual bool IsPrefixInclude() const = 0;
    /** Добавить окончание (без приставки).
     *  @note Если окончание существует будет изменен ancode (список морф. атрибутов)
     *	@return false - если окончание уже существует
     */
	virtual bool AddFlex( const char * iFlex, const char * ancode=0 ) = 0;
    /** Добавить окончание с приставкой. */
	virtual bool AddFlexPref( const char * iFlex, const char * iPref, const char * ancode=0 ) = 0;

    /** Удалить окончание. */
	virtual void DeleteFlex( const char * iFlex ) = 0;
	virtual void DeleteFlexPref( const char * iFlex, const char * iPref ) = 0;
};

#endif
