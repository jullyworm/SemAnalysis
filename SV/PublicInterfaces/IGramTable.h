// ‘айл интерфейса дл€ таблицы грамматических характеристик словар€

#ifndef IGramTableH
#define IGramTableH

#include "IGramFeature.h"

class IGramTable {
public:
	// ¬озвращает колличество грамматических характеристик в таблице
	virtual int GetGramFeatureCount() const = 0;
	// —оздаЄт новую грамматическую характеристику в таблице,
	// возвращает индекс созданной;
	// если характеристика с указанным именем уже существует в таблице,
	// то возвращает еЄ индекс, не создава€ новую
	// siFeatureType - тип создаваемой характеристики
	// 0 - морфологический аттрибут
	// 1 - часть речи
	// 2 - предлог
	virtual int CreateNewGramFeature(char* sGramFeature, short siFeatureType) = 0;
	// ”дал€ет грамматическую характеристику из таблицы,
	// возвращает код при ошибке
	// 0 - операци€ прошла успешно
	// 1 - значение характеристики хранитс€ во внешнем словаре
	// 2 - характеристика используетс€ в словарной статье
	// 6 - убирает единственный атрибут предлог
	// 7 - убирает единственный атрибут части речи
	virtual short DeleteGramFeature(int Index) = 0;
	// ¬озвращает грамматическую характеристику по еЄ индексу
	virtual IGramFeature* GetGramFeature(int Index) const = 0;
	// »щет грамматическую характеристку по еЄ значению,
	// возвращает индекс, ищет через сравнение строк
	virtual int FindGramFeature(const char* sGramFeature) const = 0;
	// »змен€ет им€ характеристики, возвращает код при ошибке
	// 0 - операци€ прошла успешно
	// 1 - значение аттрибута хранитс€ во внешнем словаре
	// 3 - атрибут c таким именем уже есть в таблице
	// 4 - устанавливает второй атрибут предлог
	// 5 - устанавливает втророй атрибут части речи
	// 6 - убирает единственный атрибут предлог
	// 7 - убирает единственный атрибут части речи
	// (значение остаЄтс€ прежним)
	// uiType - установка типа х-ки
	// 0 - морфологический аттрибут
	// 1 - часть речи
	// 2 - предлог
	virtual short SetGramFeature(int Index, char* sNewName, short siType) = 0;
	// ¬озвращает характеристику части речи
	virtual IGramFeature* GetPSFeature() const = 0;
};

#endif
